div {
    border: 3px solid black;
}
.wrapper {
    display: grid;
    /* 
    grid-template-columns
    :columns의 개수와 크기를 지정
    1. 크기 여러 번 적어서 개수 지정
    2. 동일한 크기일 경우 repeat을 이용해서 개수 지정
    */
    grid-template-columns: repeat(3, 1fr);
    /* grid-gap: 그리드 요소사이의 거리 */
    grid-gap: 10px;
    /* 
    grid-auto-rows
    : row의 크기 지정, 개수는 자동으로 지정 
    */
    grid-auto-rows: minmax(100px, auto);
}
  .one {
    /* 각 라인의 시작위치와 끝위치를 작성하여 크기작성*/
    grid-column: 1 / 3;
    /* 라인의 시작위치만 적어두면 그 위치에 하나의 크기*/
    grid-row: 1;
  }
  .two {
    grid-column: 2 / 4;
    grid-row: 1 / 3;
  }
  .three {
    grid-column: 1;
    grid-row: 2 / 5;
  }
  .four {
    grid-column: 3; 
    grid-row: 3;
  }
  .five {
    grid-column: 2;
    grid-row: 4;
  }
  .six {
    grid-column: 3;
    grid-row: 4;
  }

/*그리드 레이아웃 정렬*/
.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* 
    정렬을 사용할 때 높이를 지정해야 
    아이템의 위치를 정렬해줄수있다
    * 높이를 지정하지않으면 아이템의 크기에 자동으로 맞춤
    */
    height: 300px;
    /*아이템의 크기가 고정되어 아이템이나가지않게하기위함*/
    min-width: 318px;
    /* 기본설정 : stretch */
    /*가로정렬*/
    justify-items: end;
    /*세로정렬 : 전체가 이동*/
    align-content: stretch
}

.grid-item {
    /* 
    아이템의 크기를 설정하지 않으면 
    자동으로 그리드 컨테이너의 크기에 맞춰서 들어간다.
     */
    width: 100px;
    height: 50px;
}

.add-align {
    /* 개별 세로정렬 : 전체 align이 stretch일때 사용*/
    background-color: blanchedalmond;
    align-self: center;
    /* 개별 가로정렬 */
    justify-self: left;
}